name: Release_$(date:yyyyMMdd)$(rev:.r)

trigger:
  tags:
    include:
      - v*.*.*
pr: none

resources:
- repo: self

variables:
  buildConfiguration: 'Release'
  project: '**/IdokladSdk.csproj'

stages:
- stage: Build
  displayName: Build
  jobs:
  - job: BuildJob
    displayName: Build and test package
    pool: 'iDokladBuild'
    steps:
    - template: templates/install-nuget.yml
        
    - task: FileTransform@2
      displayName: 'Substitute settings'
      inputs:
        folderPath: '$(System.DefaultWorkingDirectory)'
        xmlTransformationRules: ''
        jsonTargetFiles: 'IdokladSdk.IntegrationTests/testsettings.json'

    - task: DotNetCoreCLI@2
      displayName: 'Build SDK'
      inputs:
        command: 'build'
        projects: '$(project)'
        arguments: '--configuration $(buildConfiguration)'
        
    - task: DotNetCoreCLI@2
      displayName: "Run Unit tests"
      inputs:
        command: 'test'
        projects: '**/*UnitTests.csproj'
        arguments: '--configuration $(buildConfiguration)'

    - task: DotNetCoreCLI@2
      displayName: 'Run Integration tests'
      inputs:
        command: 'test'
        projects: '**/*IntegrationTests.csproj'
        arguments: '--configuration $(buildConfiguration)'

    - task: DotNetCoreCLI@2
      displayName: 'Package SDK'
      inputs:
        command: 'pack'
        packagesToPack: '$(project)'
        nobuild: true
        versioningScheme: 'off'
        packDirectory: '$(Build.ArtifactStagingDirectory)'
      condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/v'))

    - task: NuGetCommand@2
      displayName: 'Push package to NuGet.org'
      inputs:
        command: 'push'
        packagesToPush: '$(Build.ArtifactStagingDirectory)/**/IdokladSdk*.nupkg;!$(Build.ArtifactStagingDirectory)/**/IdokladSdk*.symbols.nupkg'
        nuGetFeedType: 'external'
        publishFeedCredentials: 'iDoklad Nuget.org'
      condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/v'))
      
    - task: DeleteFiles@1
      displayName: 'Delete files'
      inputs:
        Contents: '**/*'
      continueOnError: true
      condition: always()